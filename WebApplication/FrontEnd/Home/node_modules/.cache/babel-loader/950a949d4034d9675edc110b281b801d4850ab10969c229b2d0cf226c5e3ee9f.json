{"ast":null,"code":"var _jsxFileName = \"/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/component/page/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../ui/styles/LoginPage.css\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Form, Button } from \"react-bootstrap\";\n// import Image from \"react-bootstrap/Image\";\n// import Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from 'axios';\n// import AlienImage from \"../Image/dell-alienware-logo_ts2h.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin,\n  onRegister,\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here, you can perform validation and authentication logic\n    // For simplicity, we'll just log the input values for now\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n  };\n  const handleLogin = async () => {\n    // You can add validation logic here before calling onLogin\n    onLogin(email, password);\n    try {\n      const response = await axios.post('https://localhost:44374/Login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      onLoginSuccess(token);\n    } catch (error) {\n      console.error('Login failed: error login');\n      // Handle login failure (show error message, etc.)\n    }\n  };\n\n  const handleRegister = () => {\n    // You can add validation logic here before calling onLogin\n    onRegister(email, password, username);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"login-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            style: {\n              width: \"100%\",\n              marginLeft: \"0%\",\n              marginTop: \"0%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"email\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                \"aria-describedby\": \"emailHelp\"\n                //   value={email}\n                ,\n                onChange: handleEmailChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\"\n                //   value={password}\n                ,\n                onChange: handlePasswordChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"DygCbMvReoLbXqFKHwWw/3IX40A=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Container","Typography","Form","Button","Row","axios","jsxDEV","_jsxDEV","LoginPage","onLogin","onRegister","onLoginSuccess","_s","email","setEmail","password","setPassword","username","setUsername","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","console","log","handleLogin","response","post","token","data","error","handleRegister","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","width","marginLeft","marginTop","Group","Label","htmlFor","Control","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/component/page/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../ui/styles/LoginPage.css\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Form, Button } from \"react-bootstrap\";\n// import Image from \"react-bootstrap/Image\";\n// import Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from 'axios';\n// import AlienImage from \"../Image/dell-alienware-logo_ts2h.jpg\";\n\n\ninterface LoginFormProps {\n  onLogin: (email: string, password: string) => void;\n  onRegister : (email: string, password: string, username: string) => void;\n  onLoginSuccess: (token: string) => void;\n}\n\nconst LoginPage: React.FC<LoginFormProps> = ({ onLogin, onRegister,onLoginSuccess }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here, you can perform validation and authentication logic\n    // For simplicity, we'll just log the input values for now\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n  };\n\n  const handleLogin = async () => {\n    // You can add validation logic here before calling onLogin\n    onLogin(email, password);\n    try {\n      const response = await axios.post('https://localhost:44374/Login', {\n        username,\n        password,\n      });\n\n      const { token } = response.data;\n      onLoginSuccess(token);\n    } catch (error) {\n      console.error('Login failed: error login');\n      // Handle login failure (show error message, etc.)\n    }\n  };\n\n  const handleRegister = () => {\n    // You can add validation logic here before calling onLogin\n    onRegister(email, password, username);\n  };\n\n  return (\n    <div>\n      <Row>\n        <div className=\"column\">\n          <Container className=\"login-container\">\n            <Typography variant=\"h4\">Login</Typography>\n            <Form\n              onSubmit={handleSubmit}\n              style={{ width: \"100%\", marginLeft: \"0%\", marginTop: \"0%\" }}\n            >\n              <Form.Group>\n                <Form.Label htmlFor=\"email\">Email:</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  //   value={email}\n                  onChange={handleEmailChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label htmlFor=\"password\">Password:</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  //   value={password}\n                  onChange={handlePasswordChange}\n                  required\n                />\n              </Form.Group>\n              <Button type=\"submit\" onClick={handleLogin}>Login</Button>\n            </Form>\n          </Container>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}