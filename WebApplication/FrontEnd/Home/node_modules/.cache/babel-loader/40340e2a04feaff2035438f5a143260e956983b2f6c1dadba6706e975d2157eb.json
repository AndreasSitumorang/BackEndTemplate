{"ast":null,"code":"var _jsxFileName = \"/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/App.tsx\",\n  _s = $RefreshSig$();\nimport Dashboard from \"./component/page/DashBoard\";\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport routesWeb from \"./component/router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticatedContent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome! You are logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthenticatedContent;\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const handleLoginSuccess = newToken => {\n    setToken(newToken);\n    // You may want to redirect the user or perform other actions on successful login\n  };\n\n  const router = createBrowserRouter([{\n    element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this),\n    children: routesWeb\n  }]);\n  return (\n    /*#__PURE__*/\n    // <Router>\n    //   <Routes>\n    //     <Route\n    //       path=\"/\"\n    //       element={<LoginSignup onLoginSuccess={handleLoginSuccess} />}\n    //     />\n    //     {/* {token ? (\n    //             <Navigate to=\"/authenticated\" />\n    //           ) : (\n    //             <LoginSignup onLoginSuccess={handleLoginSuccess} />\n    //           )}\n    //         </Route>\n    //         <Route path=\"/authenticated\">\n    //           {token ? <AuthenticatedContent /> : <Navigate to=\"/login\" />} */}\n    //     <Route path=\"/dashboard\" element={<Dashboard />} />\n    //     <Route path=\"/Header\" element={<Header text=\"Welcome to My App\" />} />\n    //   </Routes>\n    // </Router>\n    _jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthenticatedContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Dashboard","React","useState","RouterProvider","createBrowserRouter","routesWeb","jsxDEV","_jsxDEV","AuthenticatedContent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","token","setToken","handleLoginSuccess","newToken","router","element","errorElement","_c2","$RefreshReg$"],"sources":["/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/App.tsx"],"sourcesContent":["import Header from \"./component/page/Header\";\nimport Dashboard from \"./component/page/DashBoard\";\nimport React, { useState } from \"react\";\nimport LoginSignup from \"./component/page/LoginSignUp\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Navigate,\n  Routes,\n  RouterProvider,\n  createBrowserRouter,\n} from \"react-router-dom\";\n\nimport routesWeb from \"./component/router\";\n\nconst AuthenticatedContent: React.FC = () => {\n  return (\n    <div>\n      <p>Welcome! You are logged in.</p>\n      {/* Render authenticated content here */}\n    </div>\n  );\n};\n\nfunction App() {\n  const [token, setToken] = useState<string | null>(null);\n\n  const handleLoginSuccess = (newToken: string) => {\n    setToken(newToken);\n    // You may want to redirect the user or perform other actions on successful login\n  };\n\n  const router = createBrowserRouter([\n    {\n      element: <Dashboard />,\n      errorElement: <Dashboard />,\n      children: routesWeb,\n    },\n  ]);\n\n  return (\n    // <Router>\n    //   <Routes>\n    //     <Route\n    //       path=\"/\"\n    //       element={<LoginSignup onLoginSuccess={handleLoginSuccess} />}\n    //     />\n    //     {/* {token ? (\n    //             <Navigate to=\"/authenticated\" />\n    //           ) : (\n    //             <LoginSignup onLoginSuccess={handleLoginSuccess} />\n    //           )}\n    //         </Route>\n    //         <Route path=\"/authenticated\">\n    //           {token ? <AuthenticatedContent /> : <Navigate to=\"/login\" />} */}\n    //     <Route path=\"/dashboard\" element={<Dashboard />} />\n    //     <Route path=\"/Header\" element={<Header text=\"Welcome to My App\" />} />\n    //   </Routes>\n    // </Router>\n    <RouterProvider router={router} />\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAKEC,cAAc,EACdC,mBAAmB,QACd,kBAAkB;AAEzB,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,oBAA8B,GAAGA,CAAA,KAAM;EAC3C,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV,CAAC;AAACC,EAAA,GAPIN,oBAA8B;AASpC,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMiB,kBAAkB,GAAIC,QAAgB,IAAK;IAC/CF,QAAQ,CAACE,QAAQ,CAAC;IAClB;EACF,CAAC;;EAED,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;IACEkB,OAAO,eAAEf,OAAA,CAACP,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACtBU,YAAY,eAAEhB,OAAA,CAACP,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BJ,QAAQ,EAAEJ;EACZ,CAAC,CACF,CAAC;EAEF;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,OAAA,CAACJ,cAAc;MAACkB,MAAM,EAAEA;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;AAEtC;AAACG,EAAA,CArCQD,GAAG;AAAAS,GAAA,GAAHT,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}