{"ast":null,"code":"var _jsxFileName = \"/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/component/router/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Home from \"../page/DashBoard\";\nimport Header from \"../page/Header\";\nimport PathConstants from \"./pathConstants\";\nimport LoginSignup from \"../page/LoginSignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoutesWeb = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const handleLoginSuccess = newToken => {\n    setToken(newToken);\n    // You may want to redirect the user or perform other actions on successful login\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: PathConstants.Login,\n      element: /*#__PURE__*/_jsxDEV(LoginSignup, {\n        onLoginSuccess: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: PathConstants.HOME,\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: PathConstants.ABOUT,\n      element: /*#__PURE__*/_jsxDEV(Header, {\n        text: \"Welcome to My App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RoutesWeb, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = RoutesWeb;\nexport default RoutesWeb;\nvar _c;\n$RefreshReg$(_c, \"RoutesWeb\");","map":{"version":3,"names":["React","useState","Route","Routes","Home","Header","PathConstants","LoginSignup","jsxDEV","_jsxDEV","RoutesWeb","_s","token","setToken","handleLoginSuccess","newToken","children","path","Login","element","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","HOME","ABOUT","text","_c","$RefreshReg$"],"sources":["/home/andreas/Documents/Hustle/homePage/BackEndTemplate/WebApplication/FrontEnd/Home/src/component/router/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Navigate,\n  Routes,\n  RouterProvider,\n  createBrowserRouter,\n} from \"react-router-dom\";\nimport Home from \"../page/DashBoard\";\nimport Header from \"../page/Header\";\nimport PathConstants from \"./pathConstants\";\nimport LoginSignup from \"../page/LoginSignUp\";\n\nconst RoutesWeb: React.FC = () => {\n  const [token, setToken] = useState<string | null>(null);\n\n  const handleLoginSuccess = (newToken: string) => {\n    setToken(newToken);\n    // You may want to redirect the user or perform other actions on successful login\n  };\n\n  return (\n    <Routes>\n      <Route\n        path={PathConstants.Login}\n        element={<LoginSignup onLoginSuccess={handleLoginSuccess} />}\n      />\n      <Route path={PathConstants.HOME} element={<Home />} />\n      <Route\n        path={PathConstants.ABOUT}\n        element={<Header text=\"Welcome to My App\" />}\n      />\n    </Routes>\n  );\n};\n\nexport default RoutesWeb;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAEEC,KAAK,EAELC,MAAM,QAGD,kBAAkB;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMa,kBAAkB,GAAIC,QAAgB,IAAK;IAC/CF,QAAQ,CAACE,QAAQ,CAAC;IAClB;EACF,CAAC;;EAED,oBACEN,OAAA,CAACN,MAAM;IAAAa,QAAA,gBACLP,OAAA,CAACP,KAAK;MACJe,IAAI,EAAEX,aAAa,CAACY,KAAM;MAC1BC,OAAO,eAAEV,OAAA,CAACF,WAAW;QAACa,cAAc,EAAEN;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACFf,OAAA,CAACP,KAAK;MAACe,IAAI,EAAEX,aAAa,CAACmB,IAAK;MAACN,OAAO,eAAEV,OAAA,CAACL,IAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDf,OAAA,CAACP,KAAK;MACJe,IAAI,EAAEX,aAAa,CAACoB,KAAM;MAC1BP,OAAO,eAAEV,OAAA,CAACJ,MAAM;QAACsB,IAAI,EAAC;MAAmB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACb,EAAA,CArBID,SAAmB;AAAAkB,EAAA,GAAnBlB,SAAmB;AAuBzB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}